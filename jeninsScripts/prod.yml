pipeline {
    agent any
    tools {
        nodejs 'Nodejs'
    }
    environment {
        SCANNER_HOME= tool 'sonar-scanner'
    }

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', credentialsId: 'gitCred', url: 'https://github.com/ashishxojain/3-Tier-Full-Stack.git'
            }
        }
        stage('Install Package Dependencies') {
            steps {
                sh "npm install"
            }
        }
        stage('Unit Tests') {
            steps {
                sh "npm test"
            }
        }
        stage('Trivy Fs Scan') {
            steps {
                sh "trivy fs --format table -o fs-report.html ."
            }
        }
        stage('Sonarqube') {
            steps {
                withSonarQubeEnv('sonar'){
                sh "$SCANNER_HOME/bin/sonar-scanner -Dsonar.projectKey=Campground -Dsonar.projectName=Campground"
            }   
                
                
            }
        }
        stage('Docker Build & Tag') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker'){
                        sh "docker build -t ashishxojain/camp:latest ."
                    }
                }
            }
        }
        stage('Trivy Image Scan') {
            steps {
                script {
                    sh "trivy image --format table -o fs-report.html ashishxojain/camp:latest"

                }
            }
        }
        stage('Docker Push Image') {
            steps {
                script{
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'Docker'){
                        sh "docker run -d -p 3000:3000 ashishxojain/camp:latest"
                 }  
                }
                
            }
        }
         stage('Deploy to EKS') {
            steps {
              withKubeCredentials(kubectlCredentials: [[caCertificate: '', clusterName: 'eks-cluster', contextName: '', credentialsId: 'k8-token', namespace: 'webapps', serverUrl: 'https://FDD16AADF7ED4307190A003596777062.gr7.ap-south-1.eks.amazonaws.com']]) {
               sh "kubectl apply -f Manifests/dss.yml"
              
                }
            }
        }
          stage('Verify the Deployment') {
            steps {
              withKubeCredentials(kubectlCredentials: [[caCertificate: '', clusterName: 'eks-cluster', contextName: '', credentialsId: 'k8-token', namespace: 'webapps', serverUrl: 'https://FDD16AADF7ED4307190A003596777062.gr7.ap-south-1.eks.amazonaws.com']]) {
               sh "kubectl get nodes -n webapps"
               sh "kubectl get svc -n webapps"
              
                }
            }
        }
    }
}
